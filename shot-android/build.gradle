apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "com.vanniktech.maven.publish"

android {
    compileSdk 33
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.karumi.shot.DexOpenerJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        exclude "META-INF/*"
    }

    namespace 'com.karumi.shot'
    testNamespace 'com.karumi.shot.test'
}

repositories {
    mavenCentral()
    mavenLocal()
    google()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "com.facebook.testing.screenshot:core:0.14.0"
    implementation "androidx.test:runner:1.5.2"
    implementation "androidx.recyclerview:recyclerview:1.3.0"
    implementation "androidx.test.espresso:espresso-core:3.5.1"
    implementation "androidx.compose.ui:ui-test-junit4:1.5.0-beta02"
    implementation "com.google.code.gson:gson:2.10"
    implementation "androidx.fragment:fragment-ktx:1.6.0"

    // fragment-testing dependency is normally declared for debug (not test) sources,
    // as you'd usually run your FragmentScenario tests only in debug variants.
    // The inspection checks against including it in release variants and recommends using
    // debugImplementation instead. However it doesn't matter here because we're still only using it
    // for testing purposes. FragmentScenario API is needed to provide waitForFragment() extension.
    //noinspection FragmentGradleConfiguration
    implementation "androidx.fragment:fragment-testing:1.6.0"


    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.3.1"
    testImplementation "org.robolectric:robolectric:4.8.2"
    testImplementation "androidx.test.ext:junit:1.1.5"
    testImplementation "androidx.test:runner:1.5.2"
    testImplementation "androidx.test:rules:1.5.0"
    testImplementation "androidx.test.espresso:espresso-core:3.5.1"
    testImplementation "androidx.test.espresso:espresso-intents:3.5.1"
    testImplementation "androidx.test.espresso:espresso-contrib:3.5.1"

    androidTestImplementation "com.github.tmurakami:dexopener:2.0.5"
    androidTestImplementation "org.mockito:mockito-android:5.3.1"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.5.1"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.5.1"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs += ["-Xskip-prerelease-check"]
    }
}
